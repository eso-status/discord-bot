name: CD

on:
  push:
    branches:
      - "release/*"

jobs:
  cd:
    name: CD
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.base_ref != 'refs/heads/main'
    steps:
      - name: Récupération du code
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4.0.3
        with:
          node-version: 20.17.0

      - name: Get version
        id: get_version
        run: |
          VERSION=`node -p "require('./package.json').version"`
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exist
        id: tag_exist
        run: |
          exist=`git tag -l ${{ steps.get_version.outputs.version }} | wc -l`
          echo "exist=$exist" >> $GITHUB_OUTPUT

      - name: Install node dependencies
        if: steps.tag_exist.outputs.exist == 0
        run: |
          npm ci --omit=dev

      - name: Build assets
        if: steps.tag_exist.outputs.exist == 0
        run: npm run build

      - name: Set up QEMU
        if: steps.tag_exist.outputs.exist == 0
        uses: docker/setup-qemu-action@v3.2.0

      - name: Configure AWS credentials
        if: steps.tag_exist.outputs.exist == 0
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        if: steps.tag_exist.outputs.exist == 0
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Login to Docker Hub
        if: steps.tag_exist.outputs.exist == 0
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_HUB_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.tag_exist.outputs.exist == 0
        uses: docker/setup-buildx-action@v3.6.1

      - name: Build and push docker image
        if: steps.tag_exist.outputs.exist == 0
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          platforms: linux/arm64
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_NAME }}/${{ secrets.DOCKER_HUB_REGISTRY }}:${{ steps.get_version.outputs.version }}

      - name: Build, tag, and push image to Amazon ECR
        if: steps.tag_exist.outputs.exist == 0
        id: build-image
        run: |
          docker pull ${{ secrets.DOCKER_HUB_NAME }}/${{ secrets.DOCKER_HUB_REGISTRY }}:${{ steps.get_version.outputs.version }} --platform linux/arm64
          docker tag ${{ secrets.DOCKER_HUB_NAME }}/${{ secrets.DOCKER_HUB_REGISTRY }}:${{ steps.get_version.outputs.version }} ${{ steps.login-ecr.outputs.registry }}/${{ secrets.DOCKER_HUB_NAME }}/${{ secrets.DOCKER_HUB_REGISTRY }}:${{ steps.get_version.outputs.version }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.DOCKER_HUB_NAME }}/${{ secrets.DOCKER_HUB_REGISTRY }}:${{ steps.get_version.outputs.version }}
          echo "image=${{ steps.login-ecr.outputs.registry }}/${{ secrets.DOCKER_HUB_NAME }}/${{ secrets.DOCKER_HUB_REGISTRY }}:${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Config git
        if: steps.tag_exist.outputs.exist == 0
        run: |
          git config --global user.email "contact@dov118.dev"
          git config --global user.name "dov118"

      - name: Set tag
        if: steps.tag_exist.outputs.exist == 0
        run: |
          git tag ${{ steps.get_version.outputs.version }}
          git push --tags
